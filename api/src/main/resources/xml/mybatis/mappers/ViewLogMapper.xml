<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="photon.model.ViewLogMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="viewLogId">
        INSERT INTO viewlog (article_id, user_id)
            SELECT
                #{articleId},
                #{userId}
            FROM dual
            WHERE NOT EXISTS(SELECT 1
                             FROM viewlog
                             WHERE article_id = #{articleId} AND user_id = #{userId})
    </insert>

    <insert id="init">
        INSERT INTO viewlog (article_id, user_id)
            SELECT
                #{articleId},
                user_id
            FROM `user`
            WHERE NOT EXISTS(SELECT 1
                             FROM viewlog
                             WHERE article_id = #{articleId}
                             LIMIT 1)
    </insert>

    <update id="increment">
        UPDATE viewlog
        SET `count` = `count` + 1
        WHERE article_id = #{articleId} AND user_id = #{userId}
    </update>

    <update id="incrementTo">
        UPDATE viewlog
        SET `count` = #{count}
        WHERE article_id = #{articleId} AND user_id = #{userId}
    </update>

    <update id="batchIncrement">
        UPDATE viewlog
        SET `count` = `count` + 1
        WHERE user_id = #{userId} AND article_id in (
        <foreach item="articleId" index="index" collection="articleIds" separator=",">
            #{articleId}
        </foreach>
        )
    </update>

    <select id="randomCollection" resultType="int" statementType="CALLABLE">
        {call get_rands(#{userId}, #{size}, #{threshold})}
    </select>

</mapper>